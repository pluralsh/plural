name: CD / Plural

on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict
      - uses: azure/setup-helm@v3
        with:
          version: latest
      - name: install plural cli
        run: |
          mkdir scratch && cd scratch
          curl -sL 'https://github.com/pluralsh/plural-cli/releases/download/v0.5.18/plural-cli_0.5.18_Linux_amd64.tar.gz' | tar xzvf -
          chmod +x plural
          cp plural /usr/local/bin/plural
      - run: make install-cockroach
      - run: make testup
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-6-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-6
      - name: Restore _build
        uses: actions/cache@v3
        with:
          path: _build
          key: ${{ runner.os }}-mix-6-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-6
      - run: mix deps.get
      - run: mix test
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: workflow,job,repo,message,commit,author
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
        if: always()
  publish:
    name: Build and push Plural containers
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        app: [ plural, cron, worker, rtc ]
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Docker meta ${{ matrix.app }}
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          dkr.plural.sh/plural/${{ matrix.app }}
          gcr.io/pluralsh/${{ matrix.app }}
          ghcr.io/pluralsh/${{ matrix.app }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=semver,pattern={{version}}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: 'projects/${{ secrets.GOOGLE_PROJECT_ID }}/locations/global/workloadIdentityPools/github/providers/github'
        service_account: 'terraform@pluralsh.iam.gserviceaccount.com'
        token_format: 'access_token'
        create_credentials_file: true
    - uses: google-github-actions/setup-gcloud@v1.0.1
    - name: Login to gcr
      run: gcloud auth configure-docker -q
    - name: installing plural
      id: plrl
      uses: pluralsh/setup-plural@v0.1.9
      with:
        email: gh-actions@plural.sh
    - name: Login to plural registry
      uses: docker/login-action@v2
      with:
        registry: dkr.plural.sh
        username: gh-actions@plural.sh
        password: ${{ secrets.PLURAL_ACCESS_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push ${{ matrix.app }}
      uses: docker/build-push-action@v3
      with:
        context: "."
        file: "./Dockerfile"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          APP_NAME=${{ matrix.app }}
          GIT_COMMIT=${{ github.sha }}
    - name: slack webhook
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: workflow,job,repo,message,commit,author
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
      if: always()
  publish-frontend:
    name: Build and push Plural frontend container
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          dkr.plural.sh/plural/plural-www
          gcr.io/pluralsh/plural-www
          ghcr.io/pluralsh/plural-www
        # generate Docker tags based on the following events/attributes
        tags: |
          type=semver,pattern={{version}}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: 'projects/${{ secrets.GOOGLE_PROJECT_ID }}/locations/global/workloadIdentityPools/github/providers/github'
        service_account: 'terraform@pluralsh.iam.gserviceaccount.com'
        token_format: 'access_token'
        create_credentials_file: true
    - uses: google-github-actions/setup-gcloud@v1.0.1
    - name: Login to gcr
      run: gcloud auth configure-docker -q
    - name: installing plural
      id: plrl
      uses: pluralsh/setup-plural@v0.1.9
      with:
        email: gh-actions@plural.sh
    - name: Login to plural registry
      uses: docker/login-action@v2
      with:
        registry: dkr.plural.sh
        username: gh-actions@plural.sh
        password: ${{ secrets.PLURAL_ACCESS_TOKEN }}
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push ${{ matrix.app }}
      uses: docker/build-push-action@v3
      with:
        context: "./www"
        file: "./www/Dockerfile"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: slack webhook
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: workflow,job,repo,message,commit,author
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
      if: always()
  release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: [publish, publish-frontend]
    permissions:
      contents: write
      discussions: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Check if RC
      id: check
      run: |
        if [[ ${{ github.ref }} == refs/tags/*rc* ]]; then
          echo "RC detected, creating pre-release"
          echo "RC=true" >> $GITHUB_OUTPUT
        else
          echo "No RC detected, creating release"
          echo "RC=false" >> $GITHUB_OUTPUT
        fi
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true
        prerelease: ${{ steps.check.outputs.RC }}
  # bump:
  #   name: Bump Chart Version
  #   runs-on: ubuntu-latest
  #   needs: [release]
  #   permissions:
  #     contents: write
  #     discussions: write
  #     pull-requests: write
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #     with: 
  #       persist-credentials: false
  #       fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
  #   - id: semver
  #     uses: actions/github-script@0.9.0
  #     env:
  #       REF_NAME: ${{ github.ref_name }}
  #     with:
  #       script: |
  #         core.setOutput('formatted', process.env.REF_NAME.replace(/^v/, ""))
  #   - name: update context
  #     run: |
  #       sed -i 's/version: .* # VERSION/version: ${{steps.semver.outputs.formatted}} # VERSION/' plural/manifests/context.yaml
  #   - name: Create Pull Request
  #     uses: peter-evans/create-pull-request@v5
  #     with:
  #       title: Release ${{github.ref_name}}
  #       body: Automated Pull Request to release ${{github.ref_name}}
  #       commit-message: Updated chart to release ${{github.ref_name}}
  #       branch: release-${{github.ref_name}}
  #       labels: release
  #       base: master
